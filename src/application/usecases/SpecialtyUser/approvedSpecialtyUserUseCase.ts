import { StatusSpecialty } from "../../../infrastructure/ENUMS/StatusSpecialty";
import { IUserRepository } from "../../../infrastructure/database/repositories/UserRepository";
import { IUserSpecialtyRepository } from "../../../infrastructure/database/repositories/UserSpecialtyRepository";

export const approvedSpecialtyUserUseCase = async (
  userId: string, 
  specialtyId: string,
  userIdApproved: string,
  comment: string, 
  userSpecialtyRepository: IUserSpecialtyRepository, 
  userRepository: IUserRepository
) => {

  const userSpecialty = await userSpecialtyRepository.findByUserAndSpecialty(userId, specialtyId);
  if (!userSpecialty) {
    throw new Error("Especialidade n칚o encontrada.");
  }

  const user = await userRepository.findUserById(userIdApproved);
  const approverRole = user?.role as string;
  if (approverRole !== "director" && approverRole !== "lead" && approverRole !== "counselor") {
    throw new Error("Usu치rio n칚o autorizado para aprova칞칚o");
  }

  if (!userSpecialty.approvalStatus?.startsWith('waiting_by_')) {
    throw new Error('Este relat칩rio n칚o est치 aguardando aprova칞칚o.');
  }

  if (!userSpecialty.isQuizApproved) {
    throw new Error("Quiz n칚o aprovado");
  }

  if (userSpecialty.approvalStatus === "pending") {
    throw new Error("PENDING - falta o envio do relat칩rio");
  }

  if(userSpecialty.approvalStatus === 'approved'){
    throw new Error("Especialidade j치 aprovada.");
  }

  // 游댳 L칩gica de aprova칞칚o por ordem correta
  if (approverRole === "counselor") {
    if (userSpecialty.counselorApproval) {
      throw new Error("Conselheiro j치 aprovou esse relat칩rio.");
    }
    userSpecialty.counselorApproval = true;
  } 
  else if (approverRole === "lead") {
    if (!userSpecialty.counselorApproval) {
      throw new Error("O Conselheiro precisa aprovar primeiro.");
    }
    if (userSpecialty.leadApproval) {
      throw new Error("L칤der j치 aprovou esse relat칩rio.");
    }
    userSpecialty.leadApproval = true;
  } 
  else if (approverRole === "director") {
    if (!userSpecialty.leadApproval) {
      throw new Error("O L칤der precisa aprovar primeiro.");
    }
    if (userSpecialty.directorApproval) {
      throw new Error("Diretor j치 aprovou esse relat칩rio.");
    }
    userSpecialty.directorApproval = true;
  }

  // Se todos aprovaram, a especialidade 칠 oficialmente aprovada
  // if (userSpecialty.counselorApproval && userSpecialty.leadApproval && userSpecialty.directorApproval) {
  //   userSpecialty.approvalStatus = 'approved' as StatusSpecialty;
  // }

  if(userSpecialty.approvalStatus === 'approved' as StatusSpecialty){
    throw new Error("Especialidade j치 aprovada.");
  }

  const approved = await userSpecialtyRepository.approveReport(
    userId, 
    specialtyId, 
    approverRole, 
    comment
  );

  return {
    approved
  };
}
